import type { Resource } from './types';

const generateTime = (minutesAgo: number) => new Date(Date.now() - minutesAgo * 60 * 1000).toISOString();

export const mockResources: Resource[] = [
  // // Cluster: alpha-cluster
  // {
  //   id: 'alpha-gr-1',
  //   cluster: 'alpha-cluster',
  //   kind: 'GitRepository',
  //   resourceType: 'flux',
  //   name: 'flux-system',
  //   namespace: 'flux-system',
  //   status: 'Ready',
  //   message: 'Fetched revision: main/abcdef1',
  //   lastTransitionTime: generateTime(5),
  // },
  // {
  //   id: 'alpha-ks-1',
  //   cluster: 'alpha-cluster',
  //   kind: 'Kustomization',
  //   resourceType: 'flux',
  //   name: 'apps',
  //   namespace: 'flux-system',
  //   status: 'Ready',
  //   message: 'Applied revision: main/abcdef1',
  //   lastTransitionTime: generateTime(4),
  // },
  // {
  //   id: 'alpha-hr-1',
  //   cluster: 'alpha-cluster',
  //   kind: 'HelmRelease',
  //   resourceType: 'flux',
  //   name: 'prometheus',
  //   namespace: 'monitoring',
  //   status: 'Reconciling',
  //   message: 'Chart reconciliation is in progress',
  //   lastTransitionTime: generateTime(1),
  // },
  // {
  //   id: 'alpha-deploy-1',
  //   cluster: 'alpha-cluster',
  //   kind: 'Deployment',
  //   resourceType: 'k8s',
  //   name: 'frontend',
  //   namespace: 'production',
  //   status: 'Ready',
  //   message: '3/3 replicas ready',
  //   lastTransitionTime: generateTime(10),
  // },
  // {
  //   id: 'alpha-pod-1',
  //   cluster: 'alpha-cluster',
  //   kind: 'Pod',
  //   resourceType: 'k8s',
  //   name: 'frontend-xyz123',
  //   namespace: 'production',
  //   status: 'Ready',
  //   message: 'Running',
  //   lastTransitionTime: generateTime(10),
  // },
  // {
  //   id: 'alpha-svc-1',
  //   cluster: 'alpha-cluster',
  //   kind: 'Service',
  //   resourceType: 'k8s',
  //   name: 'frontend-svc',
  //   namespace: 'production',
  //   status: 'Ready',
  //   message: 'LoadBalancer Ingress: 1.2.3.4',
  //   lastTransitionTime: generateTime(10),
  // },

  // // Cluster: beta-cluster
  // {
  //   id: 'beta-gr-1',
  //   cluster: 'beta-cluster',
  //   kind: 'GitRepository',
  //   resourceType: 'flux',
  //   name: 'infra-repo',
  //   namespace: 'flux-system',
  //   status: 'Error',
  //   message: 'authentication failed: invalid credentials',
  //   lastTransitionTime: generateTime(15),
  // },
  // {
  //   id: 'beta-ks-1',
  //   cluster: 'beta-cluster',
  //   kind: 'Kustomization',
  //   resourceType: 'flux',
  //   name: 'infra-controllers',
  //   namespace: 'flux-system',
  //   status: 'Suspended',
  //   message: 'Suspended by user',
  //   lastTransitionTime: generateTime(120),
  // },
  // {
  //   id: 'beta-hr-1',
  //   cluster: 'beta-cluster',
  //   kind: 'HelmRelease',
  //   resourceType: 'flux',
  //   name: 'grafana',
  //   namespace: 'monitoring',
  //   status: 'Ready',
  //   message: 'Release reconciliation succeeded',
  //   lastTransitionTime: generateTime(30),
  // },
  // {
  //   id: 'beta-deploy-1',
  //   cluster: 'beta-cluster',
  //   kind: 'Deployment',
  //   resourceType: 'k8s',
  //   name: 'api-gateway',
  //   namespace: 'staging',
  //   status: 'Error',
  //   message: 'ImagePullBackOff: failed to pull image "acme/api-gateway:latest"',
  //   lastTransitionTime: generateTime(2),
  // },
  // {
  //   id: 'beta-pod-1',
  //   cluster: 'beta-cluster',
  //   kind: 'Pod',
  //   resourceType: 'k8s',
  //   name: 'api-gateway-abc987',
  //   namespace: 'staging',
  //   status: 'Error',
  //   message: 'ImagePullBackOff',
  //   lastTransitionTime: generateTime(2),
  // },
  // {
  //   id: 'beta-pod-2',
  //   cluster: 'beta-cluster',
  //   kind: 'Pod',
  //   resourceType: 'k8s',
  //   name: 'data-processor-jkl456',
  //   namespace: 'data-processing',
  //   status: 'Unknown',
  //   message: 'Node lost contact',
  //   lastTransitionTime: generateTime(60),
  // },
];
